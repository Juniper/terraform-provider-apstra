# Usage notes:
#   see `release_process.md`
#
before:
  hooks:
    - sh -c "[ \"$(git branch --show-current)\" = \"main\" ] || (echo must be on branch main; false)"
#    - sh -c "[ \"$(git pull)\" = \"Already up to date.\" ] || (echo not in sync with origin; false)"
    - make compliance
    - make docs
#    - git update-index --refresh && git diff-index --quiet HEAD --
builds:
- env:
    # goreleaser does not work with CGO, it could also complicate
    # usage by users in CI/CD systems like Terraform Cloud where
    # they are unable to install libraries.
    - CGO_ENABLED=0
  mod_timestamp: '{{ .CommitTimestamp }}'
  flags:
    - -trimpath
  ldflags:
    - '-s -w -X github.com/Juniper/terraform-provider-apstra/apstra.tag={{.Version}} -X github.com/Juniper/terraform-provider-apstra/apstra.commit={{.Commit}}'
  goos:
#    - freebsd
    - windows
    - linux
    - darwin
  goarch:
    - amd64
    - '386'
#    - arm
    - arm64
#  ignore:
#    - goos: darwin
#      goarch: '386'
  binary: '{{ .ProjectName }}_v{{ .Version }}'
archives:
- format: zip
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
  files:
    - LICENSE
    - README.md
    - Third_Party_Code/NOTICES.md
checksum:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate it's not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
release:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  # Setting `true` below allows us to manually examine the release before making it live.
  # The final step then is to click buttons in the releases area of the GitHub web UI.
  draft: true
changelog:
  skip: true
